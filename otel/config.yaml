extensions:
  # standard healthcheck
  health_check:
    endpoint: 0.0.0.0:13133

receivers:
  # OTLP receiver
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  # Prometheus scrapers
  prometheus:
    config:
      scrape_configs:
      - job_name: otel-colllector-metrics
        scrape_interval: 10s
        static_configs:
        - targets: ['0.0.0.0:8888']
      - job_name: keycloak-builtin-metrics
        scrape_interval: 10s
        metrics_path: /metrics
        scheme: https
        tls_config: 
          ca_file: /etc/root.crt
        static_configs:
        - targets: ['keycloak:8443']
      - job_name: keycloak-master-metrics
        scrape_interval: 10s
        metrics_path: /realms/master/metrics 
        scheme: https
        tls_config: 
          ca_file: /etc/root.crt
        static_configs:
        - targets: ['keycloak:8443']
      - job_name: keycloak-hey-prod-metrics
        scrape_interval: 10s
        metrics_path: /realms/hey-prod/metrics
        scheme: https
        tls_config: 
          ca_file: /etc/root.crt
        static_configs:
        - targets: ['keycloak:8443']

processors:
  batch/otlp-traces:
    send_batch_size: 8192
    timeout: 1s
    send_batch_max_size: 0

exporters:
  # prometheus
  prometheusremotewrite/metrics:
    endpoint: http://prometheus:9090/api/v1/write
    tls:
      insecure: true
  # jaeger
  jaeger/traces:
    endpoint: jaeger:14250
    tls:
      insecure: true

service:
  extensions: [health_check]
  pipelines:
    metrics:
      receivers: [prometheus, otlp]
      processors: []
      exporters: [prometheusremotewrite/metrics]
    traces:
      receivers: [otlp]
      processors: [batch/otlp-traces]
      exporters: [jaeger/traces]
  telemetry:
    metrics:
      address: 0.0.0.0:8888
      level: basic