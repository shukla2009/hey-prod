version: '3.8'
services:
  postgres:
    container_name: postgres 
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - postgres:/var/lib/postgresql/data
  postgres-config:
    container_name: postgres-config
    depends_on:
      - "postgres"
    build: postgres-config
    environment:
      TF_VAR_db_admin_password: postgres
      TF_VAR_db_keycloak_password: keycloak
    volumes:
      - pstfstate:/state
  otel:
    container_name: otel
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./otel/config.yaml:/etc/otel-config.yaml
      - ./otel/root.crt:/etc/root.crt
    command:
      '--config=/etc/otel-config.yaml'
    depends_on:
      - jaeger
      - prometheus

  jaeger:
    container_name: jaeger 
    image: jaegertracing/all-in-one:1.17.1
    ports: 
      - '6831:6831/udp'
      - '5778:5778'
      - '14268:14268'
      - '16686:16686'
  keycloak:
    container_name: keycloak 
    depends_on:
      - "postgres"
      - "otel"
    build: keycloak
    restart: always
    command: ["start","--optimized"]
    environment:
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: keycloak
      # KC_LOG_LEVEL: INFO
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      JAVA_OPTS_APPEND: "-javaagent:/tmp/opentelemetry-javaagent.jar -Dotel.javaagent.exclude-classes=org.keycloak.services.resources.RealmsResource"
      OTEL_SERVICE_NAME: keycloak
      OTEL_TRACES_EXPORTER: otlp
      OTEL_METRICS_EXPORTER: otlp
      QUARKUS_HTTP_ACCESS_LOG_ENABLED: "true"
      QUARKUS_HTTP_ACCESS_LOG_PATTERN: '%r\n%{ALL_REQUEST_HEADERS}'
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel:4317
    ports:
      - '8443:8443'
  keycloak-config: 
    container_name: keycloak-CONFIG
    depends_on:
      - keycloak
    build: keycloak-config
    environment:
      TF_VAR_kc_host: keycloak
      TF_VAR_kc_port: 8443
      TF_VAR_kc_admin_username: admin
      TF_VAR_kc_admin_password: admin
    volumes:
      - kctfstate:/state
  kong:
    container_name: kong 
    build: kong
    depends_on:
      - "keycloak"
      - "otel"
    environment:
      KONG_DATABASE: "off" 
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8444 ssl
      KONG_DECLARATIVE_CONFIG: /kong.yaml
      KONG_PLUGINS: rate-limiting,opentelemetry,oidc
      KONG_SSL: "on"
      KONG_SSL_CERT: /certs/server.crt
      KONG_SSL_CERT_KEY: /certs/server.key
      KONG_LUA_PACKAGE_PATH: /usr/local/kong-oidc/?.lua;
      KONG_LOG_LEVEL: warn
      KONG_OPENTELEMETRY_TRACING: all
    ports: 
      - 9443:8443
      - 8444:8444
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - ./grafana/dashboards:/provisioning/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - 3000:3000
    environment:
      LOGSPOUT: ignore
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_USERS_HOME_PAGE: /d/Xbo7ftQnz/keycloak?orgId=1
    depends_on:
      - jaeger
      - prometheus

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    command: 
      - "--web.enable-remote-write-receiver"
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
volumes:
  postgres:
    driver: local
  pstfstate:
    driver: local
  kctfstate:
    driver: local
  